/**
 * Layouts: width
 */

/* Imports */

@use "sass:map";
@use "@alanizcreative/formation/src/config" as con;
@use "@alanizcreative/formation/src/utils/functions" as func;
@use "@alanizcreative/formation/src/utils/mixins" as mix;

/* Styles */

.l-w-s {
  width: func.calc-rem(36px);
}

.l-w-m {
  width: func.calc-rem(48px);
}

.l-w-r {
  width: func.calc-rem(80px);
}

.l-w-l {
  width: func.calc-rem(110px);
}

.l-w-100-pc {
  @extend %u-width-100;
}

.l-w-50-pc {
  @include mix.breakpoint-min(800) {
    width: 50%;
  }
}

.l-w-33-pc {
  @include mix.breakpoint-min(600) {
    width: 50%;
  }

  @include mix.breakpoint-min(900) {
    width: 33.3333%;
  }
}

.l-min-w {
	min-width: func.calc-rem(400px);
}

@each $k, $v in map.get(con.$vars, "max-widths") {
  .l-mw-#{$k} {
    @extend %u-width-100;

    max-width: func.calc-rem($v);
  }
}

/* For overflow possibility */

.l-mw-full {
  max-width: calc(100vw - 2.5rem);
}

.l-mw-half {
  @include mix.breakpoint-min(768) {
    max-width: calc(50vw - 3.75rem);
  }
}
