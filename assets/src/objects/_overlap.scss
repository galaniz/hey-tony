/**
 * Objects: overlap
 */

/* Imports */

@use "sass:map";
@use "sass:math";
@use "@alanizcreative/formation/src/config" as con;
@use "@alanizcreative/formation/src/utils/functions" as func;
@use "@alanizcreative/formation/src/utils/mixins" as mix;

/* Styles */

.o-overlap {
  @include mix.fluid-size(
    --ht-overlap-p,
    func.calc-rem(290px) func.calc-rem(500px),
    700 1200
  );
  @include mix.fluid-size(
    --ht-overlap-h,
    func.calc-rem(110px) func.calc-rem(240px),
    700 1200
  );
}

.o-overlap__bg {
  .o-overlap:nth-child(odd) & {
    margin-left: 8%;
  }

  .o-overlap:nth-child(even) & {
    margin-left: -8%;
  }

  @include mix.breakpoint-min(700) {
    .o-overlap:nth-child(odd) & {
      margin-left: 12%;
    }

    .o-overlap:nth-child(even) & {
      margin-left: -12%;
    }
  }

  @include mix.breakpoint-min(1300) {
    $container: map.get(con.$containers, "def");
    $max: map.get(con.$vars, "max-widths", "l");

    .o-overlap:nth-child(odd) & {
      margin-left: calc((50vw - func.calc-rem($max - math.div($container, 2))));
    }

    .o-overlap:nth-child(even) & {
      margin-left: calc(((50vw - func.calc-rem($max - math.div($container, 2)))) * -1);
    }
  }

  @include mix.breakpoint-min(1800) {
    .o-overlap:nth-child(odd) & {
      margin-left: func.calc-rem(240px);
    }

    .o-overlap:nth-child(even) & {
      margin-left: func.calc-rem(240px * -1);
    }
  }
}

.o-overlap__fg {
  min-height: var(--ht-overlap-h);
  margin-top: calc(-1 * var(--ht-overlap-h));

  & > div::before {
    @extend %u-background-color-background-base;
    @include mix.fluid-size(
      height,
      func.calc-rem(110px) func.calc-rem(240px),
      700 1200
    );

    height: var(--ht-overlap-h);
    bottom: auto;
    transform: scale(1.02, 1.15);
    transform-origin: 0 0;
    z-index: -1;
  }

  .o-overlap:nth-child(odd) & {
    margin-right: func.calc-rem(-20px);

    & > div {
      padding-right: func.calc-rem(40px);

      &::before {
        margin-right: func.calc-rem(-30px);
        border-radius: 0% 100% 100% 0% / 100% 100% 0% 0%;
      }
    }
  }

  .o-overlap:nth-child(even) & {
    margin-left: func.calc-rem(-20px);

    & > div {
      @extend %u-text-align-right;
      @extend %u-margin-left-auto;

      .o-overlap__h {
        direction: rtl;
      }

      padding-left: func.calc-rem(40px);

      &::before {
        margin-left: func.calc-rem(-30px);
        border-radius: 100% 0% 100% 0% / 100% 100% 0% 0%;
      }
    }
  }

  @include mix.breakpoint-min(700) {
    .o-overlap:nth-child(odd) & > div {
      padding-right: func.calc-rem(60px);

      .o-overlap__h {
        padding-right: func.calc-rem(60px);
      }
    }

    .o-overlap:nth-child(even) & > div {
      padding-left: func.calc-rem(60px);

      .o-overlap__h {
        padding-left: func.calc-rem(60px);
      }
    }
  }
}

.o-overlap__r {
  .o-overlap:nth-child(even) & {
    margin-left: auto;
  }
}

.o-overlap__a::before {
  margin-top: calc(-1 * (var(--ht-overlap-p) - var(--ht-overlap-h)));
  width: 100vw;

  @include mix.breakpoint-min(660) {
    .o-overlap:nth-child(even) & {
      margin-left: calc((100vw - #{func.calc-rem(660px)}) * -1);
    }
  }
}

.o-overlap-v {
  --ht-overlap-v-theme: #{func.get-color("background-base")};

  &[data-theme="background-dark"] {
    --ht-overlap-v-theme: #{func.get-color("background-dark")};
  }
}

.o-overlap-v__bg::after {
  @extend %u-content-empty;
  @extend %u-position-absolute;
  @extend %u-left-0;

  bottom: func.calc-rem(-1px);
  right: func.calc-rem(-10px);
  max-height: func.calc-rem(60px);
  min-height: func.calc-rem(45px);
  height: 20%;
  border-radius: 0% 100% 100% 0% / 100% 100% 0% 0%;
  background-color: var(--ht-overlap-v-theme);
}

.o-overlap-v__fg {
  margin-top: func.calc-rem(-20px);

  .o-overlap-v[data-size="l"] & {
    margin-top: func.calc-rem(-24px);
  }
}

.o-overlap-v__p {
  padding-right: func.calc-rem(80px);
}
